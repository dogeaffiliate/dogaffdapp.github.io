import{_ as k}from"./index-8dfb0143.js";import{t as F,l,_ as m,x as u,q,o as r,u as f,W as L,U as R,y as D,m as U,S as G}from"./chunk-55IO54NW-f7e1bd9c.js";var p={namespace:"eip155",methods:["eth_sendTransaction","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain"],events:["accountsChanged","chainChanged"]},c,_,w,E,V,S,j,y,W,P,M,A,b,J=class extends F{constructor(e){super(e),l(this,E),l(this,S),l(this,y),l(this,P),l(this,A),m(this,"id","walletConnect"),m(this,"name","WalletConnect"),m(this,"ready",!0),l(this,c,void 0),l(this,_,void 0),l(this,w,void 0),m(this,"onAccountsChanged",t=>{t.length===0?this.emit("disconnect"):this.emit("change",{account:f.getAddress(t[0])})}),m(this,"onChainChanged",t=>{const s=D(t),i=this.isChainUnsupported(s);this.emit("change",{chain:{id:s,unsupported:i}})}),m(this,"onDisconnect",()=>{this.emit("disconnect")}),m(this,"onDisplayUri",t=>{this.emit("message",{type:"display_uri",data:t})}),this.version==="2"&&(u(this,y,W).call(this),this.isQrCode&&u(this,E,V).call(this))}get isQrCode(){return this.options.qrcode!==!1}get namespacedChains(){return this.chains.map(e=>`${p.namespace}:${e.id}`)}get version(){return"version"in this.options?this.options.version:"1"}async connect({chainId:e}={}){var i,n,h,C;const t=this.version==="1",s=this.version==="2";try{let o=e;if(!o){const d=q().lastUsedChainId;d&&!this.isChainUnsupported(d)&&(o=d)}const a=await this.getProvider({chainId:o,create:t});if(a.on("accountsChanged",this.onAccountsChanged),a.on("chainChanged",this.onChainChanged),a.on("disconnect",this.onDisconnect),s){a.on("session_delete",this.onDisconnect),a.on("display_uri",this.onDisplayUri);const d=await u(this,P,M).call(this);a.session&&!d&&await a.disconnect(),(!a.session||a.session&&!d)&&(await Promise.race([a.connect({namespaces:{[p.namespace]:{methods:p.methods,events:p.events,chains:this.namespacedChains,rpcMap:this.chains.reduce((v,g)=>({...v,[g.id]:g.rpcUrls.default.http[0]}),{})}}}),...this.isQrCode?[new Promise((v,g)=>a.on("display_uri",async O=>{var I,$;await((I=r(this,w))==null?void 0:I.openModal({uri:O})),($=r(this,w))==null||$.subscribeModal(({open:N})=>{N||g(new Error("user rejected"))})}))]:[]]),this.isQrCode&&((i=r(this,w))==null||i.closeModal()))}setTimeout(()=>this.emit("message",{type:"connecting"}),0);const z=await Promise.race([a.enable(),...t&&this.isQrCode?[new Promise((d,v)=>a.connector.on("disconnect",()=>v(new Error("user rejected"))))]:[]]),x=f.getAddress(z[0]),T=await this.getChainId(),Q=this.isChainUnsupported(T);if(t){const d=((h=(n=a.connector)==null?void 0:n.peerMeta)==null?void 0:h.name)??"";/(imtoken|metamask|omni|rainbow|trust wallet)/i.test(d)&&(this.switchChain=u(this,A,b))}else this.switchChain=u(this,A,b);return{account:x,chain:{id:T,unsupported:Q},provider:new L(a)}}catch(o){throw s&&this.isQrCode&&((C=r(this,w))==null||C.closeModal()),/user closed modal|user rejected/i.test(o==null?void 0:o.message)?new R(o):o}}async disconnect(){const e=await this.getProvider();try{await e.disconnect()}catch(t){if(!/No matching key/i.test(t.message))throw t}e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),this.version==="1"&&typeof localStorage<"u"?localStorage.removeItem("walletconnect"):(e.removeListener("session_delete",this.onDisconnect),e.removeListener("display_uri",this.onDisplayUri))}async getAccount(){const e=await this.getProvider();let t;return this.version==="1"?t=e.accounts:t=await e.request({method:"eth_accounts"}),f.getAddress(t[0])}async getChainId(){var t,s;const e=await this.getProvider();return this.version==="1"?D(e.chainId):((s=(t=q().data)==null?void 0:t.chain)==null?void 0:s.id)??D(await e.request({method:"eth_chainId"}))}async getProvider({chainId:e,create:t}={}){var s,i;if(this.options.version==="2")return r(this,c)||await u(this,y,W).call(this),e&&r(this,c).setDefaultChain(`${p.namespace}:${e}`),r(this,c);if(!r(this,c)||e||t){const n=(s=this.options)!=null&&s.infuraId?{}:this.chains.reduce((C,o)=>({...C,[o.id]:o.rpcUrls.default.http[0]}),{}),h=(await k(()=>import("./index-a4b9d08d.js"),["assets/index-a4b9d08d.js","assets/chunk-55IO54NW-f7e1bd9c.js","assets/index-8dfb0143.js","assets/index-38573e2f.css","assets/index-54fed4a6.js","assets/tslib-297d41fd.js","assets/_polyfill-node.buffer-6f79cf3c.js","assets/index-3aa13386.js","assets/dijkstra-59d11638.js"])).default;return U(this,c,new h({...this.options,chainId:e,rpc:{...n,...(i=this.options)==null?void 0:i.rpc}})),r(this,c)}return r(this,c)}async getSigner({chainId:e}={}){const[t,s]=await Promise.all([this.getProvider({chainId:e}),this.getAccount()]);let i=t;if(this.version==="2"){const n=await this.getChainId();i={...t,async request(h){return await t.request(h,`${p.namespace}:${e??n}`)}}}return new L(i,e).getSigner(s)}async isAuthorized(){try{const[e,t]=await Promise.all([this.getAccount(),u(this,P,M).call(this)]);return!!e&&t}catch{return!1}}};c=new WeakMap;_=new WeakMap;w=new WeakMap;E=new WeakSet;V=async function(){const{Web3Modal:e}=await k(()=>import("./index-0c71725c.js").then(s=>s.i),["assets/index-0c71725c.js","assets/index-8dfb0143.js","assets/index-38573e2f.css","assets/index-4eee43ae.js","assets/index-3aa13386.js"]),{version:t}=this.options;U(this,w,new e({walletConnectVersion:t==="2"?2:1,projectId:t==="2"?this.options.projectId:"",standaloneChains:this.namespacedChains}))};S=new WeakSet;j=async function(){const e=(await k(()=>import("./index.es-4b67f36d.js"),["assets/index.es-4b67f36d.js","assets/tslib-297d41fd.js","assets/chunk-55IO54NW-f7e1bd9c.js","assets/index-8dfb0143.js","assets/index-38573e2f.css","assets/index-54fed4a6.js"])).default;typeof(e==null?void 0:e.init)=="function"&&U(this,c,await e.init(this.options))};y=new WeakSet;W=async function(){return r(this,_)||U(this,_,u(this,S,j).call(this)),r(this,_)};P=new WeakSet;M=async function(){var i,n;const e=await this.getProvider();if(this.version==="1")return!0;const s=(((n=(i=e.namespaces)==null?void 0:i[p.namespace])==null?void 0:n.chains)||[]).map(h=>parseInt(h.split(":")[1]||""));return!this.chains.some(({id:h})=>!s.includes(h))};A=new WeakSet;b=async function(e){const t=await this.getProvider(),s=f.hexValue(e);try{return await Promise.race([t.request({method:"wallet_switchEthereumChain",params:[{chainId:s}]}),new Promise(i=>this.on("change",({chain:n})=>{(n==null?void 0:n.id)===e&&i(e)}))]),this.version==="2"&&(t.setDefaultChain(`${p.namespace}:${e}`),this.onChainChanged(e)),this.chains.find(i=>i.id===e)??{id:e,name:`Chain ${s}`,network:`${s}`,nativeCurrency:{decimals:18,name:"Ether",symbol:"ETH"},rpcUrls:{default:{http:[""]},public:{http:[""]}}}}catch(i){const n=typeof i=="string"?i:i==null?void 0:i.message;throw/user rejected request/i.test(n)?new R(i):new G(i)}};export{J as WalletConnectConnector};
