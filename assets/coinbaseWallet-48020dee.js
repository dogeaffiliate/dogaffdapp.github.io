import{_}from"./index-36d6195c.js";import{t as y,l as p,_ as o,u,W as C,U as w,o as h,y as m,m as v,z as E,x as f,D as A,S as U}from"./chunk-55IO54NW-1926ee48.js";var d,c,l,g,I=class extends y{constructor({chains:t,options:e}){super({chains:t,options:{reloadOnDisconnect:!1,...e}}),p(this,l),o(this,"id","coinbaseWallet"),o(this,"name","Coinbase Wallet"),o(this,"ready",!0),p(this,d,void 0),p(this,c,void 0),o(this,"onAccountsChanged",i=>{i.length===0?this.emit("disconnect"):this.emit("change",{account:u.getAddress(i[0])})}),o(this,"onChainChanged",i=>{const s=m(i),n=this.isChainUnsupported(s);this.emit("change",{chain:{id:s,unsupported:n}})}),o(this,"onDisconnect",()=>{this.emit("disconnect")})}async connect({chainId:t}={}){try{const e=await this.getProvider();e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect),this.emit("message",{type:"connecting"});const i=await e.enable(),s=u.getAddress(i[0]);let n=await this.getChainId(),r=this.isChainUnsupported(n);return t&&n!==t&&(n=(await this.switchChain(t)).id,r=this.isChainUnsupported(n)),{account:s,chain:{id:n,unsupported:r},provider:new C(e)}}catch(e){throw/(user closed modal|accounts received is empty)/i.test(e.message)?new w(e):e}}async disconnect(){if(!h(this,c))return;const t=await this.getProvider();t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),t.disconnect(),t.close()}async getAccount(){const e=await(await this.getProvider()).request({method:"eth_accounts"});return u.getAddress(e[0])}async getChainId(){const t=await this.getProvider();return m(t.chainId)}async getProvider(){var t;if(!h(this,c)){let e=(await _(()=>import("./index-038cc90d.js").then(a=>a.i),["assets/index-038cc90d.js","assets/chunk-55IO54NW-1926ee48.js","assets/index-36d6195c.js","assets/index-5dbb8597.css","assets/_polyfill-node.buffer-9bd3b447.js","assets/tslib-cbf1ed3f.js","assets/index-4eee43ae.js","assets/index-3aa13386.js"])).default;typeof e!="function"&&typeof e.default=="function"&&(e=e.default),v(this,d,new e(this.options));const i=(t=h(this,d).walletExtension)==null?void 0:t.getChainId(),s=this.chains.find(a=>this.options.chainId?a.id===this.options.chainId:a.id===i)||this.chains[0],n=this.options.chainId||(s==null?void 0:s.id),r=this.options.jsonRpcUrl||(s==null?void 0:s.rpcUrls.default.http[0]);v(this,c,h(this,d).makeWeb3Provider(r,n))}return h(this,c)}async getSigner({chainId:t}={}){const[e,i]=await Promise.all([this.getProvider(),this.getAccount()]);return new C(e,t).getSigner(i)}async isAuthorized(){try{return!!await this.getAccount()}catch{return!1}}async switchChain(t){var s;const e=await this.getProvider(),i=u.hexValue(t);try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:i}]}),this.chains.find(n=>n.id===t)??{id:t,name:`Chain ${i}`,network:`${i}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpcUrls:{default:{http:[""]},public:{http:[""]}}}}catch(n){const r=this.chains.find(a=>a.id===t);if(!r)throw new E({chainId:t,connectorId:this.id});if(n.code===4902)try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:i,chainName:r.name,nativeCurrency:r.nativeCurrency,rpcUrls:[((s=r.rpcUrls.public)==null?void 0:s.http[0])??""],blockExplorerUrls:this.getBlockExplorerUrls(r)}]}),r}catch(a){throw f(this,l,g).call(this,a)?new w(a):new A}throw f(this,l,g).call(this,n)?new w(n):new U(n)}}async watchAsset({address:t,decimals:e=18,image:i,symbol:s}){return(await this.getProvider()).request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:t,decimals:e,image:i,symbol:s}}})}};d=new WeakMap;c=new WeakMap;l=new WeakSet;g=function(t){return/(user rejected)/i.test(t.message)};export{I as CoinbaseWalletConnector};
